apiVersion: apps/v1
kind: Deployment
metadata:
  name: reservation
  labels:
    app: reservation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reservation
  template:
    metadata:
      labels:
        app: reservation
    spec:
      containers:
        - name: reservation
          image: 879772956301.dkr.ecr.ca-central-1.amazonaws.com/user24-reservation:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: reservation
  labels:
    app: reservation
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: reservation
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resort
  labels:
    app: resort
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resort
  template:
    metadata:
      labels:
        app: resort
    spec:
      containers:
        - name: resort
          image: 879772956301.dkr.ecr.ca-central-1.amazonaws.com/user24-resort:latest
          ports:
            - containerPort: 8080
          #resources:
          #  requests:
          #    cpu: "200m"  
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: resort
  labels:
    app: resort
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: resort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mypage
  labels:
    app: mypage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mypage
  template:
    metadata:
      labels:
        app: mypage
    spec:
      containers:
        - name: mypage
          image: 879772956301.dkr.ecr.ca-central-1.amazonaws.com/user24-mypage:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mypage
  labels:
    app: mypage
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: mypage            
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: 879772956301.dkr.ecr.ca-central-1.amazonaws.com/user24-gateway:latest
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  ports:
    - port: 8080
      targetPort: 8080
  type: LoadBalancer
  selector:
    app: gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment
  labels:
    app: payment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment
  template:
    metadata:
      labels:
        app: payment
    spec:
      containers:
        - name: payment
          image: 879772956301.dkr.ecr.ca-central-1.amazonaws.com/user24-payment:latest
          ports:
            - containerPort: 8080
          env:
            - name: feign.payment.url
              valueFrom:
                configMapKeyRef:
                  name: payment-cm
                  key: api.payment.url    
          #resources:
          #  requests:
          #    cpu: "200m"
          #readinessProbe:
          #  httpGet:
          #    path: '/actuator/health'
          #    port: 8080
          #  initialDelaySeconds: 10
          #  timeoutSeconds: 2
          #  periodSeconds: 5
          #  failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: payment
  labels:
    app: payment
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: payment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voucher
  labels:
    app: voucher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: voucher
  template:
    metadata:
      labels:
        app: voucher
    spec:
      containers:
        - name: voucher
          image: 879772956301.dkr.ecr.ca-central-1.amazonaws.com/user24-voucher:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: voucher
  labels:
    app: voucher
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: voucher